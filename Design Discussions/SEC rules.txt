SECURITY RULES:

COLLECTIONS & their document structure:-

1.	books
a.	authors [] 
b.	bookDescription
c.	bookID
d.	bookName
e.	bookPictures []
f.	createdBy
g.	createdOn
h.	genres [] ← max 10
i.	language  
j.	publicationYear
k.	reviewPending

●	Books can be created by all users. (CREATE)
●	Books cannot be deleted by any user except admin. (DELETE)
●	Books(all fields) cannot be edited by any user except admin. (EDIT)
●	Books can be read by all users. (READ)



2.	podcasts
a.	audioFileLink
b.	authors []
c.	bookID
d.	bookName
e.	chapterName
f.	createdOn
g.	duration
h.	genres []
i.	isChapterPodcast
j.	isExploreSection2
k.	language
l.	lastAddedToExplore2
m.	lastEditedOn
n.	numUsersLiked
o.	numUsersRetweeted
p.	podcastDescription
q.	podcastID
r.	podcastName
s.	podcastPictures []
t.	podcasterDisplayPicture
u.	podcasterID
v.	podcasterName
w.	tags []
i.	editable by user only, 2 fields numUsersRetweeted & numUsersLiked editable by all authenticated users
ii.	delete by user only
iii.	Read by all authenticated users


3.	users
a.	displayPicture
b.	followerCount ← can be moved to cloud functions [from next]
c.	followersList [] ← can be moved to cloud functions []
d.	id
e.	name
f.	timespentTotalByUsersListening
i.	Read by all authenticated users
ii.	Delete,create by admin only.
iii.	Write by user only except fields - “followersList” & “followersCount”
1.	For this , have to write a function in security rules which does 2 things.
Checks that if only followersList & followersCount are updated.& then it shall check if request.resource.data.followersList & ressource.data.followersList has a diff of 1 length only & that element is equal to request.auth.uid
		   
		
4.	privateUserData
a.	accountCreationTime
b.	bookmarksCountArray
c.	displayPicture
d.	email
e.	flipsLiked
f.	followingCount
g.	followingList
h.	id
i.	introduction
j.	isAdmin
k.	languagesComfortableTalking
l.	lastPlayingCurrentTime
m.	lastPlayingPodcastID
n.	lastSeenTime
o.	likesCountArray
p.	listenedBookPodcastsCount
q.	listenedChapterPodcastsCount
r.	name
s.	numCreatedBookPodcasts
t.	numCreatedChapterPodcasts
u.	numNotifications
v.	phoneNumber
w.	podcastsLiked
x.	timespentByUserListening
y.	userName
z.	userPreferences
aa.	Website
i.	Here, entire privateUserData document should be  editable by user only[DONE]..except isAdmin property which can be changed by admin only.
ii.	Read by all authenticated users [DONE]
iii.	Delete,create by admin only 
5.	

	   



-> Have to incorporate a rule in Security Rules that writing to podcast Document in whole is only limited to the podcasterID & the userIDs in adminList.[IMPORTANT] 
     Other than this, since partial writing permissions are allowed, only numUsersLiked & numUsersReweeted fields shall be given writing rights by all users.
    

   SO, for adding someone as admin, 2  places we have to make changes:-
	(i) 'isAdmin’ boolean field in user’s privateDoc.
	(ii) userID has to be added to the adminList used in Security Rules.


Security Rules

----------------------------------------------------------------------------
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    match /{document=**} {
   allow read, write; // or allow read, write: if true;
      }
     
     match /{path=**}/Podcasts/{PodcastID} {
      allow read: if request.auth.uid != null;
    } 
     
    match /Books/{BookID} {
     allow read: if request.auth == null;
    }
    
    match /users/{uid} {
    	allow read: if request.auth != null;
   		allow write: if request.auth.uid == uid;   
      	match /privateUserData/{privateData} {
      		allow read: if request.auth != null;
      		allow write: if request.auth.uid == uid;
         		match /{document=**}{
         			allow read,write: if request.auth.uid == uid;
         }
      }
    }
  }
}
------------------------------------------------------------------------------


Security Rules Notes:

1) In books collection, we have 3 fields that can be changed:
      -> listenCount   -- NOT USING AS OF NOW
	  -> podcastCount  -- NOT USING AS OF NOW
	  -> reviewPending ---->  Have to include the admins list in security rules for Satyam,me, & Mohit Sir as of now.
	  
	  THEREFORE, for all documents in books collection, Security Rules shall comprise of:
        -> READ ACCESS to all authenticated users as of now. Will have to change to all users when we provide TRY IT OUT option.
		-> WRITE ACCESS to only admins list.
		-> CREATE ACCESS to all users but not UPDATE ACCESS
		-> DELETE ACCESS to only admins.
		
2) In chapters subcollection, we have 3 fields that can be changed:
      -> listenCount   -- NOT USING AS OF NOW
	  -> podcastCount  -- NOT USING AS OF NOW
	  -> reviewPending ---->  Have to include the admins list in security rules for Satyam,me, & Mohit Sir as of now.
	  
	  THEREFORE, for all documents in chapters subcollection, Security Rules shall comprise of:
        -> READ ACCESS to all authenticated users as of now. Will have to change to all users when we provide TRY IT OUT option.
		-> WRITE ACCESS to only admins list.
		-> CREATE ACCESS to all users but not UPDATE ACCESS
		-> DELETE ACCESS to only admins.

3) In podcasts subCollection we have 1 field that is updated by other users as of now,i.e, numUsersLiked.
      THEREFORE, for all documents in podcasts subcollection, security rules shall comprise of
	  -> WRITE(DELETE,UPDATE,) ACCESS to only the podcasterID of the podcast.
	  -> READ ACCESS to all authenticated users as of now. Will have to change to all users when we provide TRY IT OUT option.
	  
4) For users,
     public Data --> READ for all users,WRITE for all users
	 private Data --> READ for all users,WRITE for only the user himself
	 
5) For Categories,
      READ Access to all.
	  WRITE Access to only admins.
	  
6) Also, in security rules we should include schema check(NUMBER,STRING)
